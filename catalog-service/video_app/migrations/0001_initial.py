# Generated by Django 4.2.4 on 2023-11-15 18:51

from django.db import migrations, models
import django.db.models.deletion
import video_app.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Catagory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'director_table',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'genre_table',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duration_days', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(unique=True)),
                ('username', models.CharField(max_length=200, unique=True)),
                ('subscription_plan_name', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Paused', 'Paused'), ('Exhausted', 'Exhausted'), ('Expired', 'Expired')], default='Active', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='VideoConversionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_type', models.CharField(choices=[('MOVIE', 'Movie'), ('MOVIE_TRAILER', 'Movie Trailer'), ('SERIES', 'Series'), ('SERIES_TRAILER', 'Series Trailer')], max_length=20, unique=True)),
            ],
            options={
                'db_table': 'video_conversion_type_table',
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('duration_minute', models.IntegerField()),
                ('cast_list', models.TextField(blank=True, null=True)),
                ('rating', models.FloatField(blank=True, null=True)),
                ('thumbnail_image', models.ImageField(blank=True, null=True, upload_to='thumbnail_image/', validators=[video_app.utils.validate_file_size, video_app.utils.validate_image_file])),
                ('trailer_url', models.URLField(blank=True, null=True)),
                ('is_ready', models.BooleanField(default=False)),
                ('is_premiere', models.BooleanField(default=False)),
                ('has_trailer', models.BooleanField(default=False)),
                ('is_free', models.BooleanField(default=False)),
                ('series_summary_url', models.URLField(blank=True, null=True)),
                ('number_of_seasons', models.IntegerField(blank=True, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_trending', models.BooleanField(default=False)),
                ('available_under_plans', models.ManyToManyField(blank=True, to='video_app.subscriptionplan')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_catagory', to='video_app.catagory')),
                ('conversion_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='series', to='video_app.videoconversiontype')),
                ('director', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_contents', to='video_app.director')),
                ('genre', models.ManyToManyField(related_name='%(class)s_contents', to='video_app.genre')),
            ],
            options={
                'db_table': 'series_table',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season_number', models.IntegerField()),
                ('trailer_url', models.URLField(blank=True, null=True)),
                ('thumbnail_image', models.ImageField(blank=True, null=True, upload_to='season_thumbnail_image/', validators=[video_app.utils.validate_file_size, video_app.utils.validate_image_file])),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasons', to='video_app.series')),
            ],
            options={
                'db_table': 'season_table',
                'unique_together': {('series', 'season_number')},
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('duration_minute', models.IntegerField()),
                ('cast_list', models.TextField(blank=True, null=True)),
                ('rating', models.FloatField(blank=True, null=True)),
                ('thumbnail_image', models.ImageField(blank=True, null=True, upload_to='thumbnail_image/', validators=[video_app.utils.validate_file_size, video_app.utils.validate_image_file])),
                ('trailer_url', models.URLField(blank=True, null=True)),
                ('main_content_url', models.URLField(blank=True, null=True, unique=True)),
                ('is_ready', models.BooleanField(default=False)),
                ('is_premiere', models.BooleanField(default=False)),
                ('has_trailer', models.BooleanField(default=False)),
                ('is_free', models.BooleanField(default=False)),
                ('production_cost', models.FloatField(blank=True, null=True)),
                ('licensing_cost', models.FloatField(blank=True, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_trending', models.BooleanField(default=False)),
                ('available_under_plans', models.ManyToManyField(blank=True, to='video_app.subscriptionplan')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_catagory', to='video_app.catagory')),
                ('conversion_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movies', to='video_app.videoconversiontype')),
                ('director', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_contents', to='video_app.director')),
                ('genre', models.ManyToManyField(related_name='%(class)s_contents', to='video_app.genre')),
            ],
            options={
                'db_table': 'movie_table',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episode_number', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('duration_minute', models.IntegerField()),
                ('thumbnail_image_url', models.URLField(blank=True, null=True)),
                ('episode_content_url', models.URLField(unique=True)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='video_app.season')),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='video_app.series')),
            ],
            options={
                'db_table': 'episode_table',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('object_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(blank=True, limit_choices_to=models.Q(models.Q(('app_label', 'video_app'), ('model', 'movie')), models.Q(('app_label', 'video_app'), ('model', 'series')), _connector='OR'), null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='video_app.comment')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('is_movie', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(blank=True, limit_choices_to=models.Q(models.Q(('app_label', 'video_app'), ('model', 'movie')), models.Q(('app_label', 'video_app'), ('model', 'series')), _connector='OR'), null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
            ],
            options={
                'db_table': 'banner_table',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FavoriteContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'unique_together': {('username', 'content_type', 'object_id')},
            },
        ),
    ]
